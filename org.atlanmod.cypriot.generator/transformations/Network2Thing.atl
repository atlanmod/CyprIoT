-- @atlcompiler emftvm
-- @nsURI ThingML=http://www.thingml.org/xtext/ThingML
-- @nsURI CyprIoT=http://www.atlanmod.org/CyprIoT


module Network2Thing;

create OUT: ThingML from TH: ThingML, CY : CyprIoT;

rule copyThingMLModel {
	from s: ThingML!ThingMLModel
	to t : ThingML!ThingMLModel(
		configs <- s.configs,
		imports <- s.imports,
		protocols <- s.protocols,
--		-> union((s.protocols->collect(e | Tuple{p = e, network = CyprIoT!Network.allInstances().first()}))->resolve().debug()),
		types <- s.types
	)
}

rule copyConfigs {
	from s : ThingML!Configuration
	to t : ThingML!Configuration(
		annotations <- s.annotations,
		connectors <- s.connectors,
		instances <- s.instances,
		name <- s.name,
		propassigns <- s.propassigns
	)
}

rule addProtocol {
	from 
		p : ThingML!Protocol
	to 
		protoOut : ThingML!Protocol(
			name <- CyprIoT!InstancePubSub.allInstances().first().targetedPlatform.toString().replaceAll('#', ''),
			annotations <- Sequence{annot}
		),
		annot : ThingML!PlatformAnnotation (
			name <- 'mqtt_subscribe',
			value <- CyprIoT!Network.allInstances().first().name+'_'+CyprIoT!PubSub.allInstances().first().hasTopics.first().name
		)
}