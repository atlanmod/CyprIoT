thing Temperature {
	// Arduino that senses the temperature
	port ok
}
//thing fragment msgAndPorts{
//	message sensorData (value : Int16);
//	required port AnalogInput 
//    {	
//		sends sensorData
//		receives sensorData
//	}
//}

thing AirConditionner {
	// Android that handles the air conditionner
	port ok
}

thing AndroidUser {
	// Simple android application that give the user the possibility to select the temperature
	port ok
}
datatype int <8>;
message temperatureMessage(int)
protocol mqtt

channel:pubsub MqttBus {
	topic room1 (temperatureMessage)
	topic room2 (temperatureMessage)
	topic room3 (temperatureMessage)
	topic room4 (temperatureMessage)
}

channel:reqrep ptp {
	
}
policy roomPolicy {
	rule Temperature allow:receive message:temperatureMessage
	rule AirConditionner allow:receive Temperature.ok
	rule Temperature deny:send AirConditionner.ok
}

networkConfiguration wsnConfiguration {
	domain "fr.imt.dapi.roomA246" // thing of  the same domain share the same secret key, a configuration can be deployed into different domain but the domain has to change
	instancePolicy mypolicy:roomPolicy
	enforce mypolicy
	instanceThing instanceTemp[10]:Temperature target nesc
	instanceThing instanceTemp2[10]:Temperature target cposix
	instancePubSub mqtt:MqttBus target "mosquitto" over mqtt 
	instanceReqRep ptp:ptp target "mosquitto" over mqtt
	bind instanceTemp => mqtt{room1,room2}
	bind instanceTemp2 <=> mqtt{room2,room3,room4}
	connect instanceTemp => ptp
}
