import "includes/messages.thingml"
import "includes/datatypes.thingml"
import "psm/temperaturePSM.thingml"
import "psm/timer.thingml"

thing TemperaturePIM includes tempMsgs,timerMsgs {
	property currentTemperature : UInt32 = 0
	required port temperaturePort {
		receives temperatureMessage,timerMessage
	}
	
	provided port provideTemp {
		sends temperatureMessage
	}
	
	statechart pimBehaviour init initial {
		state initial {
			on entry do print "Getting temperature" end
			transition -> showTemperature
		}
		state showTemperature {
			internal event tempMessage: temperaturePort?temperatureMessage
			//internal event time : temperaturePort?getTime
			action do 
				currentTemperature = tempMessage.TemperatureData
			end
			internal event time : temperaturePort?timerMessage
			action do
			provideTemp!temperatureMessage(currentTemperature,time.currentHour)
			end
		}
	}
}

configuration temperatureCfg 
@debug "true"
@debug_fifo "true"
{
	//instance temppsm:TemperaturePSM
	instance simulatedTemp:TemperatureRandom
	instance temppim:TemperaturePIM
	instance timer:Timer
	connector temppim.temperaturePort => simulatedTemp.temperaturePort
	connector temppim.temperaturePort => timer.timerPort
	connector temppim.provideTemp over MQTT1 // maybe to generate
}