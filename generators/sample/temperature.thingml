import "reused/messages.thingml"

thing TemperaturePSM includes tempMsgs
@c_header "#include <dht.h>"
@platform "arduino"

{
	provided port temperaturePort{
		sends temperatureMessage
		receives temperatureMessage
	}
	
	readonly property pin : UInt32 = 8
	readonly property sampling : UInt32 = 5000
	property dht : DHT
	statechart temperatureSensorBehavior init setup{
		state setup {
			on entry do print "initialization..." 
			'Serial.begin(9600);
			'&dht&'.read11('&pin&');'
			end
			transition -> collect
		}
		state collect {
			on entry
			do 'Serial.println('&dht&'.temperature);'
				temperaturePort!temperatureMessage('(uint32_t)'&dht&'.temperature')
				
			end
			transition -> samplingRate
		}
		state samplingRate {
			on entry 'delay('&sampling&');'
			transition -> collect
		}
	}
}
thing TemperaturePIM includes tempMsgs{	
	required port temperaturePort{
		receives temperatureMessage
		sends temperatureMessage
	}
	statechart pimBehaviour init showTemperature{
		state showTemperature {
			internal event e: temperaturePort?temperatureMessage
			action do 
				print e.TemperatureData 
				temperaturePort!temperatureMessage(e.TemperatureData )
			end
		}
	}
}

configuration temperatureCfg {
	instance temppsm:TemperaturePSM
	instance temppim:TemperaturePIM
	connector temppim.temperaturePort => temppsm.temperaturePort
	//connector temppim.temperaturePort over MQTT
}