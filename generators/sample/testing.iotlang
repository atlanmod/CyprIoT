thing Temperature {
	// Arduino that senses the temperature
	config="temperature.thingml"
	exposePort inout
}
//thing fragment msgAndPorts{
//	message sensorData (value : Int16);
//	required port AnalogInput 
//    {	
//		sends sensorData
//		receives sensorData
//	}
//}

thing AirConditionner {
	// Android that handles the air conditionner
	exposePort poo
	config="airconditionner.thingml"
	exposePort inout
}

thing Monitor {
	// Simple android application that give the user the possibility to select the temperature
	exposePort inout
	config="monitor.thingml"
}
datatype int <8>;
message temperatureMessage(int)
//protocol mqtt

channel:pubsub MqttChannel {
	topic room1 (temperatureMessage)
	topic room2 (temperatureMessage)
	topic room3 (temperatureMessage)
	topic room4 (temperatureMessage)
	topic room5 (temperatureMessage)
}

//channel:reqrep ptp {
	
//}

policy roomPolicy {
	rule Temperature allow:receive message:temperatureMessage
	rule AirConditionner deny:send Temperature
	rule Temperature deny:send AirConditionner
		// What does this mean?
	// Does Temperature send to monitor?
	// 1) a Temperature will not send if the topic is readable by AirConditionner
	//    Temperature does not send to room2, monitor does not read
	// 2) a Temperature will not send if the message is read only by AirConditionner
	//    Temperature sends to room2, monitor reads
	// 3) same semantics as the inverse rule (do we need send?)
	//    Temperature sends to room2
	// 4) We split topics: room2/AirConditionner, room22/Monitor, we block sending to room2/AirConditionner

	// Inverse rule (what's the difference?)
	// rule AirConditionner deny:receive thing:Temperature
	
	// Rules that talk about instances
	// option 1: rule aircond deny:receive port:Temperature.inout
	// option 2: rule SpecialAirConditionner deny:receive port:Temperature.inout
}

networkConfiguration wsnConfiguration {
	domain "fr.imt.dapi.roomA246" // thing of  the same domain share the same secret key, a configuration can be deployed into different domain but the domain has to change
	enforce roomPolicy format txt
	//instanceThing monitor[10]:Monitor id "monitor" target cposix
	instanceThing instanceTemp[1]:Temperature id "instanceTemp" password "instanceTemp123" target arduino
	instanceThing aircond[1]:AirConditionner id "instanceTemp" password "instanceTemp123" target java
	instanceThing monitor[1]:Monitor id "instanceTemp" password "instanceTemp123" target arduino
	instancePubSub mqttchannel:MqttChannel target "mosquitto" host "iot.eclipse.org" port "1883" over mqtt:tcp 
//	instanceReqRep ptp:ptp target "mosquitto" over coap:udp
	bind instanceTemp => mqttchannel{room1,room2}
	bind monitor <=> mqttchannel{room2,room3,room4}
	bind aircond <=> mqttchannel{room1,room3,room5}
//	connect instanceTemp => ptp
}
