/*
 * generated by Xtext 2.13.0
 */
package lang.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class IotlangGrammarAccess extends AbstractGrammarElementFinder {
	
	public class IoTLangModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.IoTLangModel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cThingsAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cThingsThingParserRuleCall_0_0 = (RuleCall)cThingsAssignment_0.eContents().get(0);
		private final Assignment cPoliciesAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cPoliciesPolicyParserRuleCall_1_0 = (RuleCall)cPoliciesAssignment_1.eContents().get(0);
		private final Assignment cMessagesAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cMessagesMessageParserRuleCall_2_0 = (RuleCall)cMessagesAssignment_2.eContents().get(0);
		private final Assignment cChannelsAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cChannelsChannelParserRuleCall_3_0 = (RuleCall)cChannelsAssignment_3.eContents().get(0);
		private final Assignment cProtocolsAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cProtocolsProtocolParserRuleCall_4_0 = (RuleCall)cProtocolsAssignment_4.eContents().get(0);
		private final Assignment cConfigsAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cConfigsNetworkConfigurationParserRuleCall_5_0 = (RuleCall)cConfigsAssignment_5.eContents().get(0);
		
		//IoTLangModel:
		//	(things+=Thing | policies+=Policy | messages+=Message | channels+=Channel | protocols+=Protocol |
		//	configs+=NetworkConfiguration)*;
		@Override public ParserRule getRule() { return rule; }
		
		//(things+=Thing | policies+=Policy | messages+=Message | channels+=Channel | protocols+=Protocol |
		//configs+=NetworkConfiguration)*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//things+=Thing
		public Assignment getThingsAssignment_0() { return cThingsAssignment_0; }
		
		//Thing
		public RuleCall getThingsThingParserRuleCall_0_0() { return cThingsThingParserRuleCall_0_0; }
		
		//policies+=Policy
		public Assignment getPoliciesAssignment_1() { return cPoliciesAssignment_1; }
		
		//Policy
		public RuleCall getPoliciesPolicyParserRuleCall_1_0() { return cPoliciesPolicyParserRuleCall_1_0; }
		
		//messages+=Message
		public Assignment getMessagesAssignment_2() { return cMessagesAssignment_2; }
		
		//Message
		public RuleCall getMessagesMessageParserRuleCall_2_0() { return cMessagesMessageParserRuleCall_2_0; }
		
		//channels+=Channel
		public Assignment getChannelsAssignment_3() { return cChannelsAssignment_3; }
		
		//Channel
		public RuleCall getChannelsChannelParserRuleCall_3_0() { return cChannelsChannelParserRuleCall_3_0; }
		
		//protocols+=Protocol
		public Assignment getProtocolsAssignment_4() { return cProtocolsAssignment_4; }
		
		//Protocol
		public RuleCall getProtocolsProtocolParserRuleCall_4_0() { return cProtocolsProtocolParserRuleCall_4_0; }
		
		//configs+=NetworkConfiguration
		public Assignment getConfigsAssignment_5() { return cConfigsAssignment_5; }
		
		//NetworkConfiguration
		public RuleCall getConfigsNetworkConfigurationParserRuleCall_5_0() { return cConfigsNetworkConfigurationParserRuleCall_5_0; }
	}
	public class PlatformAnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.PlatformAnnotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameANNOTATION_IDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRING_LITTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//PlatformAnnotation:
		//	name=ANNOTATION_ID value=STRING_LIT;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ANNOTATION_ID value=STRING_LIT
		public Group getGroup() { return cGroup; }
		
		//name=ANNOTATION_ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ANNOTATION_ID
		public RuleCall getNameANNOTATION_IDTerminalRuleCall_0_0() { return cNameANNOTATION_IDTerminalRuleCall_0_0; }
		
		//value=STRING_LIT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }
		
		//STRING_LIT
		public RuleCall getValueSTRING_LITTerminalRuleCall_1_0() { return cValueSTRING_LITTerminalRuleCall_1_0; }
	}
	public class ThingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.Thing");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cThingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cAnnotationsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_2_0 = (RuleCall)cAnnotationsAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		///* Main types  */ Thing: // example gateway, arduino, android  
		//	'thing' name=ID annotations+=PlatformAnnotation* '{' '}';
		@Override public ParserRule getRule() { return rule; }
		
		//// example gateway, arduino, android  
		//'thing' name=ID annotations+=PlatformAnnotation* '{' '}'
		public Group getGroup() { return cGroup; }
		
		//// example gateway, arduino, android  
		//'thing'
		public Keyword getThingKeyword_0() { return cThingKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_2() { return cAnnotationsAssignment_2; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_2_0() { return cAnnotationsPlatformAnnotationParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ChannelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.Channel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPubSubParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPointToPointParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Channel:
		//	PubSub | PointToPoint;
		@Override public ParserRule getRule() { return rule; }
		
		//// mqtt, kafka, real simple bus,
		//PubSub | PointToPoint
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PubSub
		public RuleCall getPubSubParserRuleCall_0() { return cPubSubParserRuleCall_0; }
		
		//PointToPoint
		public RuleCall getPointToPointParserRuleCall_1() { return cPointToPointParserRuleCall_1; }
	}
	public class PubSubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.PubSub");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChannelPubsubKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cHasTopicsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cHasTopicsTopicParserRuleCall_3_0 = (RuleCall)cHasTopicsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PubSub:
		//	'channel:pubsub' name=ID '{'
		//	hasTopics+=Topic*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'channel:pubsub' name=ID '{' hasTopics+=Topic* '}'
		public Group getGroup() { return cGroup; }
		
		//'channel:pubsub'
		public Keyword getChannelPubsubKeyword_0() { return cChannelPubsubKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//hasTopics+=Topic*
		public Assignment getHasTopicsAssignment_3() { return cHasTopicsAssignment_3; }
		
		//Topic
		public RuleCall getHasTopicsTopicParserRuleCall_3_0() { return cHasTopicsTopicParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PointToPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.PointToPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChannelPtpKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cHasTopicsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cHasTopicsTopicParserRuleCall_3_0 = (RuleCall)cHasTopicsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PointToPoint:
		//	'channel:ptp' name=ID '{'
		//	hasTopics+=Topic*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'channel:ptp' name=ID '{' hasTopics+=Topic* '}'
		public Group getGroup() { return cGroup; }
		
		//'channel:ptp'
		public Keyword getChannelPtpKeyword_0() { return cChannelPtpKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//hasTopics+=Topic*
		public Assignment getHasTopicsAssignment_3() { return cHasTopicsAssignment_3; }
		
		//Topic
		public RuleCall getHasTopicsTopicParserRuleCall_3_0() { return cHasTopicsTopicParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PolicyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.Policy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPolicyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cHasRulesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cHasRulesRuleParserRuleCall_3_0 = (RuleCall)cHasRulesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Policy: // mqtt, kafka, real simple bus,
		//	'policy' name=ID '{' hasRules+=Rule* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//// mqtt, kafka, real simple bus,
		//'policy' name=ID '{' hasRules+=Rule* '}'
		public Group getGroup() { return cGroup; }
		
		//// mqtt, kafka, real simple bus,
		//'policy'
		public Keyword getPolicyKeyword_0() { return cPolicyKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//hasRules+=Rule*
		public Assignment getHasRulesAssignment_3() { return cHasRulesAssignment_3; }
		
		//Rule
		public RuleCall getHasRulesRuleParserRuleCall_3_0() { return cHasRulesRuleParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ProtocolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.Protocol");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProtocolKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Protocol:
		//	'protocol' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'protocol' name=ID
		public Group getGroup() { return cGroup; }
		
		//'protocol'
		public Keyword getProtocolKeyword_0() { return cProtocolKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class MessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.Message");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMessageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Message:
		//	'message' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'message' name=ID
		public Group getGroup() { return cGroup; }
		
		//'message'
		public Keyword getMessageKeyword_0() { return cMessageKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class TopicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.Topic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTopicKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAcceptedMessagesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cAcceptedMessagesMessageCrossReference_3_0 = (CrossReference)cAcceptedMessagesAssignment_3.eContents().get(0);
		private final RuleCall cAcceptedMessagesMessageIDTerminalRuleCall_3_0_1 = (RuleCall)cAcceptedMessagesMessageCrossReference_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Topic:
		//	'topic' name=ID /*type=('?' |'!')*/ '(' acceptedMessages=[Message] ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'topic' name=ID /*type=('?' |'!')*/ '(' acceptedMessages=[Message] ')'
		public Group getGroup() { return cGroup; }
		
		//'topic'
		public Keyword getTopicKeyword_0() { return cTopicKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		///*type=('?' |'!')*/ '('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//acceptedMessages=[Message]
		public Assignment getAcceptedMessagesAssignment_3() { return cAcceptedMessagesAssignment_3; }
		
		//[Message]
		public CrossReference getAcceptedMessagesMessageCrossReference_3_0() { return cAcceptedMessagesMessageCrossReference_3_0; }
		
		//ID
		public RuleCall getAcceptedMessagesMessageIDTerminalRuleCall_3_0_1() { return cAcceptedMessagesMessageIDTerminalRuleCall_3_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.Rule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cSubjectAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cSubjectThingCrossReference_2_0 = (CrossReference)cSubjectAssignment_2.eContents().get(0);
		private final RuleCall cSubjectThingIDTerminalRuleCall_2_0_1 = (RuleCall)cSubjectThingCrossReference_2_0.eContents().get(1);
		private final Assignment cPermissionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cPermissionAlternatives_3_0 = (Alternatives)cPermissionAssignment_3.eContents().get(0);
		private final Keyword cPermissionAllowKeyword_3_0_0 = (Keyword)cPermissionAlternatives_3_0.eContents().get(0);
		private final Keyword cPermissionDenyKeyword_3_0_1 = (Keyword)cPermissionAlternatives_3_0.eContents().get(1);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cActionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Alternatives cActionAlternatives_5_0 = (Alternatives)cActionAssignment_5.eContents().get(0);
		private final Keyword cActionSendKeyword_5_0_0 = (Keyword)cActionAlternatives_5_0.eContents().get(0);
		private final Keyword cActionReceiveKeyword_5_0_1 = (Keyword)cActionAlternatives_5_0.eContents().get(1);
		private final Assignment cObjectAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cObjectThingCrossReference_6_0 = (CrossReference)cObjectAssignment_6.eContents().get(0);
		private final RuleCall cObjectThingIDTerminalRuleCall_6_0_1 = (RuleCall)cObjectThingCrossReference_6_0.eContents().get(1);
		
		//Rule:
		//	'rule' name=ID? subject=[Thing] permission=('allow' | 'deny') ':' action=('send' | 'receive') object=[Thing];
		@Override public ParserRule getRule() { return rule; }
		
		//'rule' name=ID? subject=[Thing] permission=('allow' | 'deny') ':' action=('send' | 'receive') object=[Thing]
		public Group getGroup() { return cGroup; }
		
		//'rule'
		public Keyword getRuleKeyword_0() { return cRuleKeyword_0; }
		
		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//subject=[Thing]
		public Assignment getSubjectAssignment_2() { return cSubjectAssignment_2; }
		
		//[Thing]
		public CrossReference getSubjectThingCrossReference_2_0() { return cSubjectThingCrossReference_2_0; }
		
		//ID
		public RuleCall getSubjectThingIDTerminalRuleCall_2_0_1() { return cSubjectThingIDTerminalRuleCall_2_0_1; }
		
		//permission=('allow' | 'deny')
		public Assignment getPermissionAssignment_3() { return cPermissionAssignment_3; }
		
		//('allow' | 'deny')
		public Alternatives getPermissionAlternatives_3_0() { return cPermissionAlternatives_3_0; }
		
		//'allow'
		public Keyword getPermissionAllowKeyword_3_0_0() { return cPermissionAllowKeyword_3_0_0; }
		
		//'deny'
		public Keyword getPermissionDenyKeyword_3_0_1() { return cPermissionDenyKeyword_3_0_1; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//action=('send' | 'receive')
		public Assignment getActionAssignment_5() { return cActionAssignment_5; }
		
		//('send' | 'receive')
		public Alternatives getActionAlternatives_5_0() { return cActionAlternatives_5_0; }
		
		//'send'
		public Keyword getActionSendKeyword_5_0_0() { return cActionSendKeyword_5_0_0; }
		
		//'receive'
		public Keyword getActionReceiveKeyword_5_0_1() { return cActionReceiveKeyword_5_0_1; }
		
		//object=[Thing]
		public Assignment getObjectAssignment_6() { return cObjectAssignment_6; }
		
		//[Thing]
		public CrossReference getObjectThingCrossReference_6_0() { return cObjectThingCrossReference_6_0; }
		
		//ID
		public RuleCall getObjectThingIDTerminalRuleCall_6_0_1() { return cObjectThingIDTerminalRuleCall_6_0_1; }
	}
	public class DomainElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.Domain");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDomainKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRING_LITTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		///* Configuration : Configure the WSN topology */ // Generate the topic description
		//Domain:
		//	'domain' name=STRING_LIT;
		@Override public ParserRule getRule() { return rule; }
		
		//'domain' name=STRING_LIT
		public Group getGroup() { return cGroup; }
		
		//'domain'
		public Keyword getDomainKeyword_0() { return cDomainKeyword_0; }
		
		//name=STRING_LIT
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING_LIT
		public RuleCall getNameSTRING_LITTerminalRuleCall_1_0() { return cNameSTRING_LITTerminalRuleCall_1_0; }
	}
	public class InstanceThingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.InstanceThing");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInstanceThingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNumberAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNumberINTTerminalRuleCall_2_1_0 = (RuleCall)cNumberAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeThingAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTypeThingThingCrossReference_4_0 = (CrossReference)cTypeThingAssignment_4.eContents().get(0);
		private final RuleCall cTypeThingThingIDTerminalRuleCall_4_0_1 = (RuleCall)cTypeThingThingCrossReference_4_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_5_0 = (RuleCall)cAnnotationsAssignment_5.eContents().get(0);
		
		//InstanceThing:
		//	'instanceThing' name=ID ('[' number+=INT ']')* ':' typeThing=[Thing] annotations+=PlatformAnnotation*;
		@Override public ParserRule getRule() { return rule; }
		
		//'instanceThing' name=ID ('[' number+=INT ']')* ':' typeThing=[Thing] annotations+=PlatformAnnotation*
		public Group getGroup() { return cGroup; }
		
		//'instanceThing'
		public Keyword getInstanceThingKeyword_0() { return cInstanceThingKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('[' number+=INT ']')*
		public Group getGroup_2() { return cGroup_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_0() { return cLeftSquareBracketKeyword_2_0; }
		
		//number+=INT
		public Assignment getNumberAssignment_2_1() { return cNumberAssignment_2_1; }
		
		//INT
		public RuleCall getNumberINTTerminalRuleCall_2_1_0() { return cNumberINTTerminalRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_2() { return cRightSquareBracketKeyword_2_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//typeThing=[Thing]
		public Assignment getTypeThingAssignment_4() { return cTypeThingAssignment_4; }
		
		//[Thing]
		public CrossReference getTypeThingThingCrossReference_4_0() { return cTypeThingThingCrossReference_4_0; }
		
		//ID
		public RuleCall getTypeThingThingIDTerminalRuleCall_4_0_1() { return cTypeThingThingIDTerminalRuleCall_4_0_1; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_5() { return cAnnotationsAssignment_5; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_5_0() { return cAnnotationsPlatformAnnotationParserRuleCall_5_0; }
	}
	public class InstanceChannelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.InstanceChannel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInstanceChannelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNumberAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNumberINTTerminalRuleCall_2_1_0 = (RuleCall)cNumberAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeChannelAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTypeChannelChannelCrossReference_4_0 = (CrossReference)cTypeChannelAssignment_4.eContents().get(0);
		private final RuleCall cTypeChannelChannelIDTerminalRuleCall_4_0_1 = (RuleCall)cTypeChannelChannelCrossReference_4_0.eContents().get(1);
		private final Keyword cOverKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cOverProtocolAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cOverProtocolProtocolCrossReference_6_0 = (CrossReference)cOverProtocolAssignment_6.eContents().get(0);
		private final RuleCall cOverProtocolProtocolIDTerminalRuleCall_6_0_1 = (RuleCall)cOverProtocolProtocolCrossReference_6_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_7_0 = (RuleCall)cAnnotationsAssignment_7.eContents().get(0);
		
		////instanceGateway:
		////	'instanceGateway' name=ID (( '[' number+=INT ']')*)?':' (type=[Thing|ID]) ( annotations+=PlatformAnnotation )*;
		//InstanceChannel:
		//	'instanceChannel' name=ID ('[' number+=INT ']')* ':' typeChannel=[Channel] 'over' overProtocol=[Protocol]
		//	annotations+=PlatformAnnotation*;
		@Override public ParserRule getRule() { return rule; }
		
		//'instanceChannel' name=ID ('[' number+=INT ']')* ':' typeChannel=[Channel] 'over' overProtocol=[Protocol]
		//annotations+=PlatformAnnotation*
		public Group getGroup() { return cGroup; }
		
		//'instanceChannel'
		public Keyword getInstanceChannelKeyword_0() { return cInstanceChannelKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('[' number+=INT ']')*
		public Group getGroup_2() { return cGroup_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_0() { return cLeftSquareBracketKeyword_2_0; }
		
		//number+=INT
		public Assignment getNumberAssignment_2_1() { return cNumberAssignment_2_1; }
		
		//INT
		public RuleCall getNumberINTTerminalRuleCall_2_1_0() { return cNumberINTTerminalRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_2() { return cRightSquareBracketKeyword_2_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//typeChannel=[Channel]
		public Assignment getTypeChannelAssignment_4() { return cTypeChannelAssignment_4; }
		
		//[Channel]
		public CrossReference getTypeChannelChannelCrossReference_4_0() { return cTypeChannelChannelCrossReference_4_0; }
		
		//ID
		public RuleCall getTypeChannelChannelIDTerminalRuleCall_4_0_1() { return cTypeChannelChannelIDTerminalRuleCall_4_0_1; }
		
		//'over'
		public Keyword getOverKeyword_5() { return cOverKeyword_5; }
		
		//overProtocol=[Protocol]
		public Assignment getOverProtocolAssignment_6() { return cOverProtocolAssignment_6; }
		
		//[Protocol]
		public CrossReference getOverProtocolProtocolCrossReference_6_0() { return cOverProtocolProtocolCrossReference_6_0; }
		
		//ID
		public RuleCall getOverProtocolProtocolIDTerminalRuleCall_6_0_1() { return cOverProtocolProtocolIDTerminalRuleCall_6_0_1; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_7() { return cAnnotationsAssignment_7; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_7_0() { return cAnnotationsPlatformAnnotationParserRuleCall_7_0; }
	}
	public class InstancePolicyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.InstancePolicy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInstancePolicyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypePolicyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypePolicyPolicyCrossReference_3_0 = (CrossReference)cTypePolicyAssignment_3.eContents().get(0);
		private final RuleCall cTypePolicyPolicyIDTerminalRuleCall_3_0_1 = (RuleCall)cTypePolicyPolicyCrossReference_3_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_4_0 = (RuleCall)cAnnotationsAssignment_4.eContents().get(0);
		
		//InstancePolicy:
		//	'instancePolicy' name=ID ':' typePolicy=[Policy] annotations+=PlatformAnnotation*;
		@Override public ParserRule getRule() { return rule; }
		
		//'instancePolicy' name=ID ':' typePolicy=[Policy] annotations+=PlatformAnnotation*
		public Group getGroup() { return cGroup; }
		
		//'instancePolicy'
		public Keyword getInstancePolicyKeyword_0() { return cInstancePolicyKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//typePolicy=[Policy]
		public Assignment getTypePolicyAssignment_3() { return cTypePolicyAssignment_3; }
		
		//[Policy]
		public CrossReference getTypePolicyPolicyCrossReference_3_0() { return cTypePolicyPolicyCrossReference_3_0; }
		
		//ID
		public RuleCall getTypePolicyPolicyIDTerminalRuleCall_3_0_1() { return cTypePolicyPolicyIDTerminalRuleCall_3_0_1; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_4() { return cAnnotationsAssignment_4; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_4_0() { return cAnnotationsPlatformAnnotationParserRuleCall_4_0; }
	}
	public class NetworkConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.NetworkConfiguration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNetworkConfigurationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cAnnotationsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_2_0 = (RuleCall)cAnnotationsAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cDomainAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cDomainDomainParserRuleCall_4_0_0 = (RuleCall)cDomainAssignment_4_0.eContents().get(0);
		private final Assignment cBindsAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cBindsBindParserRuleCall_4_1_0 = (RuleCall)cBindsAssignment_4_1.eContents().get(0);
		private final Assignment cThingInstancesAssignment_4_2 = (Assignment)cAlternatives_4.eContents().get(2);
		private final RuleCall cThingInstancesInstanceThingParserRuleCall_4_2_0 = (RuleCall)cThingInstancesAssignment_4_2.eContents().get(0);
		private final Assignment cChannelInstancesAssignment_4_3 = (Assignment)cAlternatives_4.eContents().get(3);
		private final RuleCall cChannelInstancesInstanceChannelParserRuleCall_4_3_0 = (RuleCall)cChannelInstancesAssignment_4_3.eContents().get(0);
		private final Group cGroup_4_4 = (Group)cAlternatives_4.eContents().get(4);
		private final Keyword cEnforceKeyword_4_4_0 = (Keyword)cGroup_4_4.eContents().get(0);
		private final Assignment cEnforcesAssignment_4_4_1 = (Assignment)cGroup_4_4.eContents().get(1);
		private final CrossReference cEnforcesInstancePolicyCrossReference_4_4_1_0 = (CrossReference)cEnforcesAssignment_4_4_1.eContents().get(0);
		private final RuleCall cEnforcesInstancePolicyIDTerminalRuleCall_4_4_1_0_1 = (RuleCall)cEnforcesInstancePolicyCrossReference_4_4_1_0.eContents().get(1);
		private final Assignment cInstancePoliciyAssignment_4_5 = (Assignment)cAlternatives_4.eContents().get(5);
		private final RuleCall cInstancePoliciyInstancePolicyParserRuleCall_4_5_0 = (RuleCall)cInstancePoliciyAssignment_4_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//NetworkConfiguration:
		//	'networkConfiguration' name=ID annotations+=PlatformAnnotation* '{' (domain+=Domain | binds+=Bind |
		//	thingInstances+=InstanceThing | channelInstances+=InstanceChannel | 'enforce' enforces+=[InstancePolicy] |
		//	instancePoliciy+=InstancePolicy)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'networkConfiguration' name=ID annotations+=PlatformAnnotation* '{' (domain+=Domain | binds+=Bind |
		//thingInstances+=InstanceThing | channelInstances+=InstanceChannel | 'enforce' enforces+=[InstancePolicy] |
		//instancePoliciy+=InstancePolicy)* '}'
		public Group getGroup() { return cGroup; }
		
		//'networkConfiguration'
		public Keyword getNetworkConfigurationKeyword_0() { return cNetworkConfigurationKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_2() { return cAnnotationsAssignment_2; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_2_0() { return cAnnotationsPlatformAnnotationParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(domain+=Domain | binds+=Bind | thingInstances+=InstanceThing | channelInstances+=InstanceChannel | 'enforce'
		//enforces+=[InstancePolicy] | instancePoliciy+=InstancePolicy)*
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//domain+=Domain
		public Assignment getDomainAssignment_4_0() { return cDomainAssignment_4_0; }
		
		//Domain
		public RuleCall getDomainDomainParserRuleCall_4_0_0() { return cDomainDomainParserRuleCall_4_0_0; }
		
		//binds+=Bind
		public Assignment getBindsAssignment_4_1() { return cBindsAssignment_4_1; }
		
		//Bind
		public RuleCall getBindsBindParserRuleCall_4_1_0() { return cBindsBindParserRuleCall_4_1_0; }
		
		//thingInstances+=InstanceThing
		public Assignment getThingInstancesAssignment_4_2() { return cThingInstancesAssignment_4_2; }
		
		//InstanceThing
		public RuleCall getThingInstancesInstanceThingParserRuleCall_4_2_0() { return cThingInstancesInstanceThingParserRuleCall_4_2_0; }
		
		//channelInstances+=InstanceChannel
		public Assignment getChannelInstancesAssignment_4_3() { return cChannelInstancesAssignment_4_3; }
		
		//InstanceChannel
		public RuleCall getChannelInstancesInstanceChannelParserRuleCall_4_3_0() { return cChannelInstancesInstanceChannelParserRuleCall_4_3_0; }
		
		//'enforce' enforces+=[InstancePolicy]
		public Group getGroup_4_4() { return cGroup_4_4; }
		
		//'enforce'
		public Keyword getEnforceKeyword_4_4_0() { return cEnforceKeyword_4_4_0; }
		
		//enforces+=[InstancePolicy]
		public Assignment getEnforcesAssignment_4_4_1() { return cEnforcesAssignment_4_4_1; }
		
		//[InstancePolicy]
		public CrossReference getEnforcesInstancePolicyCrossReference_4_4_1_0() { return cEnforcesInstancePolicyCrossReference_4_4_1_0; }
		
		//ID
		public RuleCall getEnforcesInstancePolicyIDTerminalRuleCall_4_4_1_0_1() { return cEnforcesInstancePolicyIDTerminalRuleCall_4_4_1_0_1; }
		
		//instancePoliciy+=InstancePolicy
		public Assignment getInstancePoliciyAssignment_4_5() { return cInstancePoliciyAssignment_4_5; }
		
		//InstancePolicy
		public RuleCall getInstancePoliciyInstancePolicyParserRuleCall_4_5_0() { return cInstancePoliciyInstancePolicyParserRuleCall_4_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class BindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.Bind");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBindKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cThingInstanceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cThingInstanceInstanceThingCrossReference_2_0 = (CrossReference)cThingInstanceAssignment_2.eContents().get(0);
		private final RuleCall cThingInstanceInstanceThingIDTerminalRuleCall_2_0_1 = (RuleCall)cThingInstanceInstanceThingCrossReference_2_0.eContents().get(1);
		private final Assignment cDirectionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cDirectionAlternatives_3_0 = (Alternatives)cDirectionAssignment_3.eContents().get(0);
		private final Keyword cDirectionEqualsSignGreaterThanSignKeyword_3_0_0 = (Keyword)cDirectionAlternatives_3_0.eContents().get(0);
		private final Keyword cDirectionLessThanSignEqualsSignGreaterThanSignKeyword_3_0_1 = (Keyword)cDirectionAlternatives_3_0.eContents().get(1);
		private final Keyword cDirectionLessThanSignEqualsSignKeyword_3_0_2 = (Keyword)cDirectionAlternatives_3_0.eContents().get(2);
		private final Assignment cChannelInstanceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cChannelInstanceInstanceChannelCrossReference_4_0 = (CrossReference)cChannelInstanceAssignment_4.eContents().get(0);
		private final RuleCall cChannelInstanceInstanceChannelIDTerminalRuleCall_4_0_1 = (RuleCall)cChannelInstanceInstanceChannelCrossReference_4_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTopicsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cTopicsTopicCrossReference_6_0 = (CrossReference)cTopicsAssignment_6.eContents().get(0);
		private final RuleCall cTopicsTopicIDTerminalRuleCall_6_0_1 = (RuleCall)cTopicsTopicCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cTopicsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cTopicsTopicCrossReference_7_1_0 = (CrossReference)cTopicsAssignment_7_1.eContents().get(0);
		private final RuleCall cTopicsTopicIDTerminalRuleCall_7_1_0_1 = (RuleCall)cTopicsTopicCrossReference_7_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cAnnotationsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cAnnotationsPlatformAnnotationParserRuleCall_9_0 = (RuleCall)cAnnotationsAssignment_9.eContents().get(0);
		
		//Bind:
		//	'bind' name=ID? thingInstance=[InstanceThing] direction=('=>' | '<=>' | '<=') channelInstance=[InstanceChannel] '{'
		//	topics+=[Topic] ("," topics+=[Topic])* '}' annotations+=PlatformAnnotation*;
		@Override public ParserRule getRule() { return rule; }
		
		//'bind' name=ID? thingInstance=[InstanceThing] direction=('=>' | '<=>' | '<=') channelInstance=[InstanceChannel] '{'
		//topics+=[Topic] ("," topics+=[Topic])* '}' annotations+=PlatformAnnotation*
		public Group getGroup() { return cGroup; }
		
		//'bind'
		public Keyword getBindKeyword_0() { return cBindKeyword_0; }
		
		//name=ID?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//thingInstance=[InstanceThing]
		public Assignment getThingInstanceAssignment_2() { return cThingInstanceAssignment_2; }
		
		//[InstanceThing]
		public CrossReference getThingInstanceInstanceThingCrossReference_2_0() { return cThingInstanceInstanceThingCrossReference_2_0; }
		
		//ID
		public RuleCall getThingInstanceInstanceThingIDTerminalRuleCall_2_0_1() { return cThingInstanceInstanceThingIDTerminalRuleCall_2_0_1; }
		
		//direction=('=>' | '<=>' | '<=')
		public Assignment getDirectionAssignment_3() { return cDirectionAssignment_3; }
		
		//('=>' | '<=>' | '<=')
		public Alternatives getDirectionAlternatives_3_0() { return cDirectionAlternatives_3_0; }
		
		//'=>'
		public Keyword getDirectionEqualsSignGreaterThanSignKeyword_3_0_0() { return cDirectionEqualsSignGreaterThanSignKeyword_3_0_0; }
		
		//'<=>'
		public Keyword getDirectionLessThanSignEqualsSignGreaterThanSignKeyword_3_0_1() { return cDirectionLessThanSignEqualsSignGreaterThanSignKeyword_3_0_1; }
		
		//'<='
		public Keyword getDirectionLessThanSignEqualsSignKeyword_3_0_2() { return cDirectionLessThanSignEqualsSignKeyword_3_0_2; }
		
		//channelInstance=[InstanceChannel]
		public Assignment getChannelInstanceAssignment_4() { return cChannelInstanceAssignment_4; }
		
		//[InstanceChannel]
		public CrossReference getChannelInstanceInstanceChannelCrossReference_4_0() { return cChannelInstanceInstanceChannelCrossReference_4_0; }
		
		//ID
		public RuleCall getChannelInstanceInstanceChannelIDTerminalRuleCall_4_0_1() { return cChannelInstanceInstanceChannelIDTerminalRuleCall_4_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//topics+=[Topic]
		public Assignment getTopicsAssignment_6() { return cTopicsAssignment_6; }
		
		//[Topic]
		public CrossReference getTopicsTopicCrossReference_6_0() { return cTopicsTopicCrossReference_6_0; }
		
		//ID
		public RuleCall getTopicsTopicIDTerminalRuleCall_6_0_1() { return cTopicsTopicIDTerminalRuleCall_6_0_1; }
		
		//("," topics+=[Topic])*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//topics+=[Topic]
		public Assignment getTopicsAssignment_7_1() { return cTopicsAssignment_7_1; }
		
		//[Topic]
		public CrossReference getTopicsTopicCrossReference_7_1_0() { return cTopicsTopicCrossReference_7_1_0; }
		
		//ID
		public RuleCall getTopicsTopicIDTerminalRuleCall_7_1_0_1() { return cTopicsTopicIDTerminalRuleCall_7_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//annotations+=PlatformAnnotation*
		public Assignment getAnnotationsAssignment_9() { return cAnnotationsAssignment_9; }
		
		//PlatformAnnotation
		public RuleCall getAnnotationsPlatformAnnotationParserRuleCall_9_0() { return cAnnotationsPlatformAnnotationParserRuleCall_9_0; }
	}
	
	
	private final IoTLangModelElements pIoTLangModel;
	private final TerminalRule tINT;
	private final TerminalRule tSTRING_LIT;
	private final TerminalRule tANNOTATION_ID;
	private final PlatformAnnotationElements pPlatformAnnotation;
	private final ThingElements pThing;
	private final ChannelElements pChannel;
	private final PubSubElements pPubSub;
	private final PointToPointElements pPointToPoint;
	private final PolicyElements pPolicy;
	private final ProtocolElements pProtocol;
	private final MessageElements pMessage;
	private final TopicElements pTopic;
	private final RuleElements pRule;
	private final DomainElements pDomain;
	private final InstanceThingElements pInstanceThing;
	private final InstanceChannelElements pInstanceChannel;
	private final InstancePolicyElements pInstancePolicy;
	private final NetworkConfigurationElements pNetworkConfiguration;
	private final BindElements pBind;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public IotlangGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pIoTLangModel = new IoTLangModelElements();
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.INT");
		this.tSTRING_LIT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.STRING_LIT");
		this.tANNOTATION_ID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "lang.Iotlang.ANNOTATION_ID");
		this.pPlatformAnnotation = new PlatformAnnotationElements();
		this.pThing = new ThingElements();
		this.pChannel = new ChannelElements();
		this.pPubSub = new PubSubElements();
		this.pPointToPoint = new PointToPointElements();
		this.pPolicy = new PolicyElements();
		this.pProtocol = new ProtocolElements();
		this.pMessage = new MessageElements();
		this.pTopic = new TopicElements();
		this.pRule = new RuleElements();
		this.pDomain = new DomainElements();
		this.pInstanceThing = new InstanceThingElements();
		this.pInstanceChannel = new InstanceChannelElements();
		this.pInstancePolicy = new InstancePolicyElements();
		this.pNetworkConfiguration = new NetworkConfigurationElements();
		this.pBind = new BindElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("lang.Iotlang".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//IoTLangModel:
	//	(things+=Thing | policies+=Policy | messages+=Message | channels+=Channel | protocols+=Protocol |
	//	configs+=NetworkConfiguration)*;
	public IoTLangModelElements getIoTLangModelAccess() {
		return pIoTLangModel;
	}
	
	public ParserRule getIoTLangModelRule() {
		return getIoTLangModelAccess().getRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//terminal STRING_LIT:
	//	'"' ('\\' . | !('\\' | '"'))* '"';
	public TerminalRule getSTRING_LITRule() {
		return tSTRING_LIT;
	}
	
	//terminal ANNOTATION_ID:
	//	"@" ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getANNOTATION_IDRule() {
		return tANNOTATION_ID;
	}
	
	//PlatformAnnotation:
	//	name=ANNOTATION_ID value=STRING_LIT;
	public PlatformAnnotationElements getPlatformAnnotationAccess() {
		return pPlatformAnnotation;
	}
	
	public ParserRule getPlatformAnnotationRule() {
		return getPlatformAnnotationAccess().getRule();
	}
	
	///* Main types  */ Thing: // example gateway, arduino, android  
	//	'thing' name=ID annotations+=PlatformAnnotation* '{' '}';
	public ThingElements getThingAccess() {
		return pThing;
	}
	
	public ParserRule getThingRule() {
		return getThingAccess().getRule();
	}
	
	//Channel:
	//	PubSub | PointToPoint;
	public ChannelElements getChannelAccess() {
		return pChannel;
	}
	
	public ParserRule getChannelRule() {
		return getChannelAccess().getRule();
	}
	
	//PubSub:
	//	'channel:pubsub' name=ID '{'
	//	hasTopics+=Topic*
	//	'}';
	public PubSubElements getPubSubAccess() {
		return pPubSub;
	}
	
	public ParserRule getPubSubRule() {
		return getPubSubAccess().getRule();
	}
	
	//PointToPoint:
	//	'channel:ptp' name=ID '{'
	//	hasTopics+=Topic*
	//	'}';
	public PointToPointElements getPointToPointAccess() {
		return pPointToPoint;
	}
	
	public ParserRule getPointToPointRule() {
		return getPointToPointAccess().getRule();
	}
	
	//Policy: // mqtt, kafka, real simple bus,
	//	'policy' name=ID '{' hasRules+=Rule* '}';
	public PolicyElements getPolicyAccess() {
		return pPolicy;
	}
	
	public ParserRule getPolicyRule() {
		return getPolicyAccess().getRule();
	}
	
	//Protocol:
	//	'protocol' name=ID;
	public ProtocolElements getProtocolAccess() {
		return pProtocol;
	}
	
	public ParserRule getProtocolRule() {
		return getProtocolAccess().getRule();
	}
	
	//Message:
	//	'message' name=ID;
	public MessageElements getMessageAccess() {
		return pMessage;
	}
	
	public ParserRule getMessageRule() {
		return getMessageAccess().getRule();
	}
	
	//Topic:
	//	'topic' name=ID /*type=('?' |'!')*/ '(' acceptedMessages=[Message] ')';
	public TopicElements getTopicAccess() {
		return pTopic;
	}
	
	public ParserRule getTopicRule() {
		return getTopicAccess().getRule();
	}
	
	//Rule:
	//	'rule' name=ID? subject=[Thing] permission=('allow' | 'deny') ':' action=('send' | 'receive') object=[Thing];
	public RuleElements getRuleAccess() {
		return pRule;
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}
	
	///* Configuration : Configure the WSN topology */ // Generate the topic description
	//Domain:
	//	'domain' name=STRING_LIT;
	public DomainElements getDomainAccess() {
		return pDomain;
	}
	
	public ParserRule getDomainRule() {
		return getDomainAccess().getRule();
	}
	
	//InstanceThing:
	//	'instanceThing' name=ID ('[' number+=INT ']')* ':' typeThing=[Thing] annotations+=PlatformAnnotation*;
	public InstanceThingElements getInstanceThingAccess() {
		return pInstanceThing;
	}
	
	public ParserRule getInstanceThingRule() {
		return getInstanceThingAccess().getRule();
	}
	
	////instanceGateway:
	////	'instanceGateway' name=ID (( '[' number+=INT ']')*)?':' (type=[Thing|ID]) ( annotations+=PlatformAnnotation )*;
	//InstanceChannel:
	//	'instanceChannel' name=ID ('[' number+=INT ']')* ':' typeChannel=[Channel] 'over' overProtocol=[Protocol]
	//	annotations+=PlatformAnnotation*;
	public InstanceChannelElements getInstanceChannelAccess() {
		return pInstanceChannel;
	}
	
	public ParserRule getInstanceChannelRule() {
		return getInstanceChannelAccess().getRule();
	}
	
	//InstancePolicy:
	//	'instancePolicy' name=ID ':' typePolicy=[Policy] annotations+=PlatformAnnotation*;
	public InstancePolicyElements getInstancePolicyAccess() {
		return pInstancePolicy;
	}
	
	public ParserRule getInstancePolicyRule() {
		return getInstancePolicyAccess().getRule();
	}
	
	//NetworkConfiguration:
	//	'networkConfiguration' name=ID annotations+=PlatformAnnotation* '{' (domain+=Domain | binds+=Bind |
	//	thingInstances+=InstanceThing | channelInstances+=InstanceChannel | 'enforce' enforces+=[InstancePolicy] |
	//	instancePoliciy+=InstancePolicy)*
	//	'}';
	public NetworkConfigurationElements getNetworkConfigurationAccess() {
		return pNetworkConfiguration;
	}
	
	public ParserRule getNetworkConfigurationRule() {
		return getNetworkConfigurationAccess().getRule();
	}
	
	//Bind:
	//	'bind' name=ID? thingInstance=[InstanceThing] direction=('=>' | '<=>' | '<=') channelInstance=[InstanceChannel] '{'
	//	topics+=[Topic] ("," topics+=[Topic])* '}' annotations+=PlatformAnnotation*;
	public BindElements getBindAccess() {
		return pBind;
	}
	
	public ParserRule getBindRule() {
		return getBindAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
