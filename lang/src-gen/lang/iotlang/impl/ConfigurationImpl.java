/**
 * generated by Xtext 2.13.0
 */
package lang.iotlang.impl;

import java.util.Collection;

import lang.iotlang.AbstractConnector;
import lang.iotlang.AnnotatedElement;
import lang.iotlang.Channeling;
import lang.iotlang.ConfigPropertyAssign;
import lang.iotlang.Configuration;
import lang.iotlang.Domain;
import lang.iotlang.Instance;
import lang.iotlang.InstanceGateway;
import lang.iotlang.IotlangPackage;
import lang.iotlang.PlatformAnnotation;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Configuration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link lang.iotlang.impl.ConfigurationImpl#getAnnotations <em>Annotations</em>}</li>
 *   <li>{@link lang.iotlang.impl.ConfigurationImpl#getDomain <em>Domain</em>}</li>
 *   <li>{@link lang.iotlang.impl.ConfigurationImpl#getChannelings <em>Channelings</em>}</li>
 *   <li>{@link lang.iotlang.impl.ConfigurationImpl#getInstancegateways <em>Instancegateways</em>}</li>
 *   <li>{@link lang.iotlang.impl.ConfigurationImpl#getInstances <em>Instances</em>}</li>
 *   <li>{@link lang.iotlang.impl.ConfigurationImpl#getConnectors <em>Connectors</em>}</li>
 *   <li>{@link lang.iotlang.impl.ConfigurationImpl#getPropassigns <em>Propassigns</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConfigurationImpl extends NamedElementImpl implements Configuration
{
  /**
   * The cached value of the '{@link #getAnnotations() <em>Annotations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnnotations()
   * @generated
   * @ordered
   */
  protected EList<PlatformAnnotation> annotations;

  /**
   * The cached value of the '{@link #getDomain() <em>Domain</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomain()
   * @generated
   * @ordered
   */
  protected EList<Domain> domain;

  /**
   * The cached value of the '{@link #getChannelings() <em>Channelings</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChannelings()
   * @generated
   * @ordered
   */
  protected EList<Channeling> channelings;

  /**
   * The cached value of the '{@link #getInstancegateways() <em>Instancegateways</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInstancegateways()
   * @generated
   * @ordered
   */
  protected EList<InstanceGateway> instancegateways;

  /**
   * The cached value of the '{@link #getInstances() <em>Instances</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInstances()
   * @generated
   * @ordered
   */
  protected EList<Instance> instances;

  /**
   * The cached value of the '{@link #getConnectors() <em>Connectors</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConnectors()
   * @generated
   * @ordered
   */
  protected EList<AbstractConnector> connectors;

  /**
   * The cached value of the '{@link #getPropassigns() <em>Propassigns</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPropassigns()
   * @generated
   * @ordered
   */
  protected EList<ConfigPropertyAssign> propassigns;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConfigurationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IotlangPackage.Literals.CONFIGURATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<PlatformAnnotation> getAnnotations()
  {
    if (annotations == null)
    {
      annotations = new EObjectContainmentEList<PlatformAnnotation>(PlatformAnnotation.class, this, IotlangPackage.CONFIGURATION__ANNOTATIONS);
    }
    return annotations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Domain> getDomain()
  {
    if (domain == null)
    {
      domain = new EObjectContainmentEList<Domain>(Domain.class, this, IotlangPackage.CONFIGURATION__DOMAIN);
    }
    return domain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Channeling> getChannelings()
  {
    if (channelings == null)
    {
      channelings = new EObjectContainmentEList<Channeling>(Channeling.class, this, IotlangPackage.CONFIGURATION__CHANNELINGS);
    }
    return channelings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<InstanceGateway> getInstancegateways()
  {
    if (instancegateways == null)
    {
      instancegateways = new EObjectContainmentEList<InstanceGateway>(InstanceGateway.class, this, IotlangPackage.CONFIGURATION__INSTANCEGATEWAYS);
    }
    return instancegateways;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Instance> getInstances()
  {
    if (instances == null)
    {
      instances = new EObjectContainmentEList<Instance>(Instance.class, this, IotlangPackage.CONFIGURATION__INSTANCES);
    }
    return instances;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<AbstractConnector> getConnectors()
  {
    if (connectors == null)
    {
      connectors = new EObjectContainmentEList<AbstractConnector>(AbstractConnector.class, this, IotlangPackage.CONFIGURATION__CONNECTORS);
    }
    return connectors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ConfigPropertyAssign> getPropassigns()
  {
    if (propassigns == null)
    {
      propassigns = new EObjectContainmentEList<ConfigPropertyAssign>(ConfigPropertyAssign.class, this, IotlangPackage.CONFIGURATION__PROPASSIGNS);
    }
    return propassigns;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case IotlangPackage.CONFIGURATION__ANNOTATIONS:
        return ((InternalEList<?>)getAnnotations()).basicRemove(otherEnd, msgs);
      case IotlangPackage.CONFIGURATION__DOMAIN:
        return ((InternalEList<?>)getDomain()).basicRemove(otherEnd, msgs);
      case IotlangPackage.CONFIGURATION__CHANNELINGS:
        return ((InternalEList<?>)getChannelings()).basicRemove(otherEnd, msgs);
      case IotlangPackage.CONFIGURATION__INSTANCEGATEWAYS:
        return ((InternalEList<?>)getInstancegateways()).basicRemove(otherEnd, msgs);
      case IotlangPackage.CONFIGURATION__INSTANCES:
        return ((InternalEList<?>)getInstances()).basicRemove(otherEnd, msgs);
      case IotlangPackage.CONFIGURATION__CONNECTORS:
        return ((InternalEList<?>)getConnectors()).basicRemove(otherEnd, msgs);
      case IotlangPackage.CONFIGURATION__PROPASSIGNS:
        return ((InternalEList<?>)getPropassigns()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IotlangPackage.CONFIGURATION__ANNOTATIONS:
        return getAnnotations();
      case IotlangPackage.CONFIGURATION__DOMAIN:
        return getDomain();
      case IotlangPackage.CONFIGURATION__CHANNELINGS:
        return getChannelings();
      case IotlangPackage.CONFIGURATION__INSTANCEGATEWAYS:
        return getInstancegateways();
      case IotlangPackage.CONFIGURATION__INSTANCES:
        return getInstances();
      case IotlangPackage.CONFIGURATION__CONNECTORS:
        return getConnectors();
      case IotlangPackage.CONFIGURATION__PROPASSIGNS:
        return getPropassigns();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IotlangPackage.CONFIGURATION__ANNOTATIONS:
        getAnnotations().clear();
        getAnnotations().addAll((Collection<? extends PlatformAnnotation>)newValue);
        return;
      case IotlangPackage.CONFIGURATION__DOMAIN:
        getDomain().clear();
        getDomain().addAll((Collection<? extends Domain>)newValue);
        return;
      case IotlangPackage.CONFIGURATION__CHANNELINGS:
        getChannelings().clear();
        getChannelings().addAll((Collection<? extends Channeling>)newValue);
        return;
      case IotlangPackage.CONFIGURATION__INSTANCEGATEWAYS:
        getInstancegateways().clear();
        getInstancegateways().addAll((Collection<? extends InstanceGateway>)newValue);
        return;
      case IotlangPackage.CONFIGURATION__INSTANCES:
        getInstances().clear();
        getInstances().addAll((Collection<? extends Instance>)newValue);
        return;
      case IotlangPackage.CONFIGURATION__CONNECTORS:
        getConnectors().clear();
        getConnectors().addAll((Collection<? extends AbstractConnector>)newValue);
        return;
      case IotlangPackage.CONFIGURATION__PROPASSIGNS:
        getPropassigns().clear();
        getPropassigns().addAll((Collection<? extends ConfigPropertyAssign>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IotlangPackage.CONFIGURATION__ANNOTATIONS:
        getAnnotations().clear();
        return;
      case IotlangPackage.CONFIGURATION__DOMAIN:
        getDomain().clear();
        return;
      case IotlangPackage.CONFIGURATION__CHANNELINGS:
        getChannelings().clear();
        return;
      case IotlangPackage.CONFIGURATION__INSTANCEGATEWAYS:
        getInstancegateways().clear();
        return;
      case IotlangPackage.CONFIGURATION__INSTANCES:
        getInstances().clear();
        return;
      case IotlangPackage.CONFIGURATION__CONNECTORS:
        getConnectors().clear();
        return;
      case IotlangPackage.CONFIGURATION__PROPASSIGNS:
        getPropassigns().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IotlangPackage.CONFIGURATION__ANNOTATIONS:
        return annotations != null && !annotations.isEmpty();
      case IotlangPackage.CONFIGURATION__DOMAIN:
        return domain != null && !domain.isEmpty();
      case IotlangPackage.CONFIGURATION__CHANNELINGS:
        return channelings != null && !channelings.isEmpty();
      case IotlangPackage.CONFIGURATION__INSTANCEGATEWAYS:
        return instancegateways != null && !instancegateways.isEmpty();
      case IotlangPackage.CONFIGURATION__INSTANCES:
        return instances != null && !instances.isEmpty();
      case IotlangPackage.CONFIGURATION__CONNECTORS:
        return connectors != null && !connectors.isEmpty();
      case IotlangPackage.CONFIGURATION__PROPASSIGNS:
        return propassigns != null && !propassigns.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == AnnotatedElement.class)
    {
      switch (derivedFeatureID)
      {
        case IotlangPackage.CONFIGURATION__ANNOTATIONS: return IotlangPackage.ANNOTATED_ELEMENT__ANNOTATIONS;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == AnnotatedElement.class)
    {
      switch (baseFeatureID)
      {
        case IotlangPackage.ANNOTATED_ELEMENT__ANNOTATIONS: return IotlangPackage.CONFIGURATION__ANNOTATIONS;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

} //ConfigurationImpl
