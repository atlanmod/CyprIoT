/**
 * generated by Xtext 2.13.0
 */
package lang.iotlang.impl;

import java.util.Collection;

import lang.iotlang.InstanceChannel;
import lang.iotlang.InstancePtP;
import lang.iotlang.InstancePubSub;
import lang.iotlang.IotlangPackage;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Instance Channel</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link lang.iotlang.impl.InstanceChannelImpl#getInstancesPubSub <em>Instances Pub Sub</em>}</li>
 *   <li>{@link lang.iotlang.impl.InstanceChannelImpl#getInstancesPtp <em>Instances Ptp</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InstanceChannelImpl extends MinimalEObjectImpl.Container implements InstanceChannel
{
  /**
   * The cached value of the '{@link #getInstancesPubSub() <em>Instances Pub Sub</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInstancesPubSub()
   * @generated
   * @ordered
   */
  protected EList<InstancePubSub> instancesPubSub;

  /**
   * The cached value of the '{@link #getInstancesPtp() <em>Instances Ptp</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInstancesPtp()
   * @generated
   * @ordered
   */
  protected EList<InstancePtP> instancesPtp;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InstanceChannelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IotlangPackage.Literals.INSTANCE_CHANNEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<InstancePubSub> getInstancesPubSub()
  {
    if (instancesPubSub == null)
    {
      instancesPubSub = new EObjectContainmentEList<InstancePubSub>(InstancePubSub.class, this, IotlangPackage.INSTANCE_CHANNEL__INSTANCES_PUB_SUB);
    }
    return instancesPubSub;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<InstancePtP> getInstancesPtp()
  {
    if (instancesPtp == null)
    {
      instancesPtp = new EObjectContainmentEList<InstancePtP>(InstancePtP.class, this, IotlangPackage.INSTANCE_CHANNEL__INSTANCES_PTP);
    }
    return instancesPtp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case IotlangPackage.INSTANCE_CHANNEL__INSTANCES_PUB_SUB:
        return ((InternalEList<?>)getInstancesPubSub()).basicRemove(otherEnd, msgs);
      case IotlangPackage.INSTANCE_CHANNEL__INSTANCES_PTP:
        return ((InternalEList<?>)getInstancesPtp()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IotlangPackage.INSTANCE_CHANNEL__INSTANCES_PUB_SUB:
        return getInstancesPubSub();
      case IotlangPackage.INSTANCE_CHANNEL__INSTANCES_PTP:
        return getInstancesPtp();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IotlangPackage.INSTANCE_CHANNEL__INSTANCES_PUB_SUB:
        getInstancesPubSub().clear();
        getInstancesPubSub().addAll((Collection<? extends InstancePubSub>)newValue);
        return;
      case IotlangPackage.INSTANCE_CHANNEL__INSTANCES_PTP:
        getInstancesPtp().clear();
        getInstancesPtp().addAll((Collection<? extends InstancePtP>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IotlangPackage.INSTANCE_CHANNEL__INSTANCES_PUB_SUB:
        getInstancesPubSub().clear();
        return;
      case IotlangPackage.INSTANCE_CHANNEL__INSTANCES_PTP:
        getInstancesPtp().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IotlangPackage.INSTANCE_CHANNEL__INSTANCES_PUB_SUB:
        return instancesPubSub != null && !instancesPubSub.isEmpty();
      case IotlangPackage.INSTANCE_CHANNEL__INSTANCES_PTP:
        return instancesPtp != null && !instancesPtp.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //InstanceChannelImpl
