grammar org.atlanmod.cypriot.Cypriot with org.eclipse.xtext.xbase.Xbase

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
// TODO import "platform:/resource/org.atlanmod.cypriot/ThingML.ecore" as thingml

generate cyprIoT "http://www.atlanmod.org/CyprIoT"

CyprIoTModel returns CyprIoTModel:
		(importThings+=Thing | 
		pubsubs+=PubSub |
		pointToPoint+=PointToPoint |
		networks+=Network |
		users+=User |
		policies+=Policy |
		roles+=Role)*;

NamedElement:
	User | Role | Thing | Network | Topic | PointToPoint | PubSub |
	InstanceThing | InstancePubSub | InstancePTP | Endpoint | Topic |
	BindPubSub | BindPTP |
	";" name=ID
;

// Domain Model
Role:
	'role' name=ID
;

User :
	'user' name=ID 'assigned' assignedRoles+=[Role] ( "," assignedRoles+=[Role])*
;
// TODO [thingml::ThingMLModel]
Thing:
	'thing' name=ID 
		'assigned' assignedRoles+=[Role] ( "," assignedRoles+=[Role])*
		'import' importPath=STRING_LIT
;

Property:
	'property' name=ID '=' propertyValue=STRING_LIT
;

// Dynamicity of the configuration

Network:
	'network' name=ID '{'
		(networkProperty+=Property |
		instancesThing+=InstanceThing |
		instancesPubsub+=InstancePubSub |
		instancesReqrep+=InstancePTP |
		bindsPubsub+=BindPubSub | 
		bindPTP+=BindPTP
		)*
	'}'
;



InstanceThing :
	'instanceThing'typeThing=[Thing] ':' name=ID ('['numberOfInstances=INT']')?  ('owner' owner=[User])? platform=('@posix' | '@java' | '@arduino' | 'javascript')
;
InstancePubSub :
	'instancePubsub'typePubSub=[PubSub] ':' name=ID  'platform' platform=('MQTT' | 'AMQP' )
;
InstancePTP :
	'instancePTP' typePtP=[PointToPoint] ':' name=ID  'platform'  platform=('HTTP' | 'COAP' )
;
PointToPoint:
	'channel:ptp' name=ID '{'
		(hasEndpoints +=Endpoint)*
	'}'
;

Endpoint:
	'endpoint'  name=ID ('(' hasParameters+=ID ( "," assignedRoles+=ID)* ')')*
;

PubSub:
	'channel:pubsub' name=ID '{'
		(	chanProperties+=Property|
			hasTopics +=Topic
		)*
	'}'
;

Topic:
	'topic'  name=ID  ('subtopicOf' subtopicOf+=[Topic])?
;

// TODO subjectPort=[thingml::Port]
BindPubSub:
	'bindPubSub'	(name=ID)? thingInstance=[InstanceThing]"." subjectPort=ID readOrWrite=('=>' |'<=') pubSubInstance=[InstancePubSub] '{' topics+=[Topic] ( "," topics+=[Topic])*'}'
;

BindPTP:
	'bindPTP'	(name=ID)? thingInstance=[InstanceThing]"." subjectPort=ID readOrWrite=('=>' |'<=') ptpInstance=[InstancePTP] '.' endpoint=[Endpoint]
;

Policy:
	'policy' name=ID '{'
		rules+=Rule
	'}'
;

Rule:
	'rule' (name=ID)? subject=ID effect=('allow'|'deny'|'trigger') action=('send' | 'receive' |  'performTransition' | 'goToState' | 'executeFunction' ) object=ID conditions=Condition
;

Condition:
	'condition' 
;

// Terminals

@Override 
terminal INT returns ecore::EInt: ('1'..'9')('0'..'9')*;

terminal STRING_LIT	: 
			'"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"';

terminal ANNOTATION_ID:
	"@" ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*; 